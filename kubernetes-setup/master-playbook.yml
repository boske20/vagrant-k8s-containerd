- hosts: all
  become: true
  tasks:
  - name: "Configuring docker-ce repo"
    get_url:
      url: https://download.docker.com/linux/centos/docker-ce.repo
      dest: /etc/yum.repos.d/docker-ce.repo
      mode: 0644
      
  - name: CNI to be used
    get_url:
      url: https://download.docker.com/linux/centos/docker-ce.repo
      dest: /etc/yum.repos.d/docker-ce.repo
      mode: 0644

  - name: Add kubernetes repo
    yum_repository:
      name: kubernetes
      description: kubernetes YUM repo
      file: kubernetes_repos
      baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
      enabled: yes
      gpgcheck: yes
      repo_gpgcheck: yes
      exclude:
      - kubelet
      - kubeadm 
      - kubectl
      gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
      
  - name: Put SELinux in permissive mode, logging actions that would be blocked.
    selinux:
      policy: targeted
      state: permissive
      
  - name: create a file for modules-load.d
    file:
      path: /etc/modules-load.d/k8s.conf
      state: touch
      mode: u+rw,g-wx,o-rwx
      
  - name: Copy added modules-load.d module
    copy:
      content: |
               br_netfilter
               overlay
      dest: /etc/modules-load.d/k8s.conf
      
  - name: Ensure br_netfilter is enabled.
    modprobe:
      name: br_netfilter
      state: present

  - name: Ensure overlay is enabled.
    modprobe:
      name: overlay
      state: present
      
  - name: added sysctl.d call-ip6tables
    lineinfile:
      path: /etc/sysctl.conf
      line: net.bridge.bridge-nf-call-ip6tables = 1
      create: no
    notify: run sysctl
    
  - name: added sysctl.d call-iptables
    lineinfile:
      path: /etc/sysctl.conf
      line: net.bridge.bridge-nf-call-iptables = 1
      create: no
    notify: run sysctl
       
  - name: added sysctl.d ip_forward
    lineinfile:
      path: /etc/sysctl.conf
      line: net.ipv4.ip_forward = 1
      create: no
    notify: run sysctl
    
  - name: load sysctl config
    command:
      cmd: sysctl -p

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Install packages that needed for k8s
    yum:
      name:
      - kubelet
      - kubeadm
      - kubectl
      - docker-ce 
      - docker-ce-cli 
      - containerd.io
      state: present
      disable_excludes: kubernetes
      
  - name: Create a directory if it does not exist
    file:
      path: /etc/containerd/
      state: directory
      mode: '0755'
    
  - name:  containerd default config
    command:
      cmd: containerd config default | tee /etc/containerd/config.toml

  - name: enabled containerd
    systemd:
      name: containerd
      state: started
      enabled: yes
      
  - name: Copy containerd to config.toml
    copy:
      content: |
               [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
                 [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
                   SystemdCgroup = true
      dest: /etc/containerd/config.toml
      
  - name: enabled containerd
    systemd:
      name: containerd
      state: restarted
      daemon_reload: yes
              
  - name: enable kubelet
    service:
      name: kubelet
      state: started
      enabled: yes
  - name: Configure node ip
    lineinfile:
      path: /etc/sysconfig/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}            
      
  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted
      
  - name: Initialize the Kubernetes cluster using kubeadm
    command: kubeadm init --apiserver-advertise-address="192.168.50.10" --node-name k8s-master --pod-network-cidr=192.168.0.0/16 --ignore-preflight-errors=all 

  - name: Setup kubeconfig for vagrant user
    command: "{{ item }}"
    with_items:
     - mkdir -p /home/vagrant/.kube
     - cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
     - chown vagrant:vagrant /home/vagrant/.kube/config

  - name: Install calico pod network
    become: false
    command: kubectl create -f https://docs.projectcalico.org/manifests/calico.yaml

  - name: Generate join command
    command: kubeadm token create --print-join-command
    register: join_command

  - name: Copy join command to local file
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"
    become: false
    
  handlers:
    - name: run sysctl
      command:
        cmd: sysctl -p


